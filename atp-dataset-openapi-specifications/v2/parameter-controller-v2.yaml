openapi: 3.0.3
info:
  title: Api Documentation
  description: Api Documentation
  version: '1.0'
servers:
  - url: 'http://localhost:8080'
    description: Inferred Url
tags:
  - name: parameter-controller
    description: Parameter Controller v2
paths:
  '/v2/parameter/ds/{dataSetId}/attribute/{attributeId}':
    put:
      tags:
        - parameter-controller
      summary: Creates new parameter with provided text.
      operationId: create
      parameters:
        - name: dataSetId
          in: path
          description: dataSetId
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: attributeId
          in: path
          description: attributeId
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ParameterRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: string
                format: uuid
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - parameter-controller
      summary: Updates value of the selected parameter.
      operationId: update
      parameters:
        - name: dataSetId
          in: path
          description: dataSetId
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: attributeId
          in: path
          description: attributeId
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ParameterRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Parameter'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /v2/parameter/update/bulk:
    post:
      tags:
        - parameter-controller
      summary: Updates value of the selected parameters. Please do not use for files or overlaps!
      operationId: updateParameters
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ParameterRequest'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
components:
  schemas:
    ParameterRequest:
      title: ParameterRequest
      required:
          - modifiedWhen
      type: object
      properties:
        value:
          type: string
        dataSetReference:
          type: string
          format: uuid
        listValueReference:
          type: string
          format: uuid;
        dataSetListId:
          type: string
          format: uuid
        dataSetId:
          type: string
          format: uuid
        attrPathIds:
          type: array
          items:
            type: string
            format: uuid
        listIdsParametersToChange:
          type: array
          items:
            type: string
            format: uuid
        dataSetsIds:
          type: array
          items:
            type: string
            format: uuid
        modifiedWhen:
          type: string
          format: date-time
    Attribute:
      title: Attribute
      required:
        - dataSetList
        - id
        - name
        - type
      type: object
      properties:
        dataSetList:
          description: parent
          $ref: '#/components/schemas/DataSetList'
        dataSetListReference:
          description: for dsl type
          $ref: '#/components/schemas/DataSetList'
        id:
          type: string
          format: uuid
        listValues:
          type: array
          description: for list type
          items:
            $ref: '#/components/schemas/ListValue'
        name:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
        type:
          $ref: '#/components/schemas/AttributeType'
    DataSet:
      title: DataSet
      type: object
    DataSetList:
      title: DataSetList
      required:
        - id
        - name
        - visibilityArea
      type: object
      properties:
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
        createdBy:
          type: string
          format: uuid
        createdWhen:
          type: string
          format: date-time
        dataSets:
          type: array
          items:
            $ref: '#/components/schemas/DataSet'
        id:
          type: string
          format: uuid
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
        modifiedBy:
          type: string
          format: uuid
        modifiedWhen:
          type: string
          format: date-time
        name:
          type: string
        testPlan:
          $ref: '#/components/schemas/TestPlan'
        visibilityArea:
          description: parent
          $ref: '#/components/schemas/VisibilityArea'
    FileData:
      title: FileData
      type: object
      properties:
        contentType:
          type: string
        fileName:
          type: string
        fileType:
          type: string
        parameterUuid:
          type: string
          format: uuid
        url:
          type: string
    Label:
      title: Label
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    ListValue:
      title: ListValue
      required:
        - attribute
        - id
        - name
      type: object
      properties:
        attribute:
          description: parent
          $ref: '#/components/schemas/Attribute'
        id:
          type: string
          format: uuid
        name:
          type: string
    Parameter:
      title: Parameter
      required:
        - attribute
        - dataSet
        - id
      type: object
      properties:
        attribute:
          description: parent
          $ref: '#/components/schemas/Attribute'
        dataSet:
          description: parent
          $ref: '#/components/schemas/DataSet'
        dataSetReference:
          description: for attribute with dsl type
          $ref: '#/components/schemas/DataSet'
        fileData:
          $ref: '#/components/schemas/FileData'
        id:
          type: string
          format: uuid
        listValue:
          description: for attribute with list type
          $ref: '#/components/schemas/ListValue'
        text:
          type: string
          description: for attribute with text type
    TestPlan:
      title: TestPlan
      required:
        - id
        - name
        - visibilityArea
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        visibilityArea:
          $ref: '#/components/schemas/VisibilityArea'
    VisibilityArea:
      title: VisibilityArea
      required:
        - id
        - name
      type: object
      properties:
        dataSetLists:
          type: array
          items:
            $ref: '#/components/schemas/DataSetList'
        id:
          type: string
          format: uuid
        name:
          type: string
    AttributeType:
      type: string
      enum:
        - CHANGE
        - DSL
        - ENCRYPTED
        - FILE
        - LIST
        - TEXT
